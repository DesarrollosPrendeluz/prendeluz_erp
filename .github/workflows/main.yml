name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - develop
      - testGitACtions
      

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout del repositorio
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set environment variables dynamically
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "IMAGE_NAME=backend_erp" >> $GITHUB_ENV
            echo "DATABASE_NAME=prend_items_luz" >> $GITHUB_ENV
            echo "CONTAINER_NAME=back_erp" >> $GITHUB_ENV
          else
            echo "IMAGE_NAME=test_backend_erp" >> $GITHUB_ENV
            echo "DATABASE_NAME=test_prend_items_luz" >> $GITHUB_ENV
            echo "CONTAINER_NAME=test_back_erp" >> $GITHUB_ENV
            echo "CONTAINER_NAME=upload_test" >> $GITHUB_ENV
            echo "CONTAINER_NAME_TEST_BACKUP=upload_test_backup" >> $GITHUB_ENV
          fi

      # 2. Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. Build Docker image
      - name: Build Docker image
        run: |
          docker build \
            --build-arg DB_PSWD=${{ secrets.DB_PASSWORD }} \
            --build-arg DB_NAME=${{env.DATABASE_NAME }} \
            -t ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest .

      #4. Push Docker image to DockerHub
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
      - name: Execute commands via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            echo "Conectando al servidor remoto..."
            docker login
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            if [[ "${{ github.ref }}" == "refs/heads/testGitACtions" ]]; then



              echo "Generamos el nuevo contenedor..."
              docker run -d --name ${{ env.CONTAINER_NAME_TEST }} \
              -p 9985:8880 \
                ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
              docker prune

            else
              echo "No se ejecuta el reinicio del contenedor en main."
            fi



